/**
 * Stratis Node API
 * Access to the Stratis Node's api.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "ValidatedAddress.h"

#include "StratisAPIModule.h"
#include "Helpers.h"

#include "Templates/SharedPointer.h"

namespace stratis 
{
namespace api 
{

void ValidatedAddress::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Isvalid.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("isvalid")); WriteJsonValue(Writer, Isvalid.GetValue());	
	}
	if (Address.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("address")); WriteJsonValue(Writer, Address.GetValue());	
	}
	if (ScriptPubKey.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("scriptPubKey")); WriteJsonValue(Writer, ScriptPubKey.GetValue());	
	}
	if (Isscript.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("isscript")); WriteJsonValue(Writer, Isscript.GetValue());	
	}
	if (Iswitness.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("iswitness")); WriteJsonValue(Writer, Iswitness.GetValue());	
	}
	Writer->WriteObjectEnd();
}

bool ValidatedAddress::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("isvalid"), Isvalid);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("address"), Address);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("scriptPubKey"), ScriptPubKey);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("isscript"), Isscript);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("iswitness"), Iswitness);

	return ParseSuccess;
}

}
}
